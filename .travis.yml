matrix:
  include:
  - os: linux
    language: python
    python: "2.7"
  - os: linux
    language: python
    python: "3.6"
  - os: osx
    language: generic
    python: "2.7"
    env: TRAVIS_PYTHON_VERSION=2.7
  - os: osx
    language: generic
    python: "3.6"
    env: TRAVIS_PYTHON_VERSION=3.6

# We need to install the correct version of Python for MacOS
before_install: |
  if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
    pip install virtualenv
    if [ "${TRAVIS_PYTHON_VERSION}" == "3.6" ]; then
      virtualenv -p `which python3` venv
    else
      virtualenv -p `which python2` venv
    fi
    source ./venv/bin/activate 
    pip install pip==18.1
  fi
  python --version
  if [ "${TRAVIS_PYTHON_VERSION}" == "3.6" ]; then
    export PYTHON_VERSION=3
  else
    export PYTHON_VERSION=2
  fi
  if [ "${TRAVIS_BRANCH}" == "master" ]; then
    export FILE_NAME="${TRAVIS_OS_NAME}-python${PYTHON_VERSION}-latest-setup"
  else
    export FILE_NAME="${TRAVIS_OS_NAME}-python${PYTHON_VERSION}-${TRAVIS_BRANCH}-setup"
  fi
install:
  - pip install -r requirements.txt

script:
  - pyinstaller setup.py --add-data templates/docker-compose.*.yml:templates --add-data versions.json:. --onefile
  - cp dist/setup "${FILE_NAME}"

# For all commits to a branch, we create draft releases unless they were a pull_request
# For tags, we upload release artefacts to the tagged release
deploy:
  - provider: releases
    api_key: "${GITHUB_OAUTH_TOKEN}"
    file: "${FILE_NAME}"
    name: "${TRAVIS_JOB_NUMBER}-${TRAVIS_BRANCH}"
    body: "Based on commit: ${TRAVIS_COMMIT}"
    skip_cleanup: true
    draft: true
    on:
      tags: false
      all_branches: true
      condition: $TRAVIS_EVENT_TYPE == push
  - provider: releases
    api_key: "${GITHUB_OAUTH_TOKEN}"
    file: "${FILE_NAME}"
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
